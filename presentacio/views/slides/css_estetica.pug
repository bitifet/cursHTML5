

.slide(data-name="estetica")
  div

    h3.step.title CSS - Est√®tica i Animaci√≥

    p.step.
      Fins ara hem apr√®s des de com funciona el CSS (anatomia de les regles, la
      Cascada, Her√®ncia...) fins a com posicionar elements i realitzar
      complexes maquetacions que s'adaptin al tamany (i al tipus) de
      dispositiu, passant per t√®cniques avan√ßades com l'√∫s de variables i
      realitzar c√†lculs amb les distintes unitats de mesura disponibles.

    p.step.
      Ens queda nom√©s la part m√©s divertida: Donar-li color i dinamisme.



.slide(data-name="color_i_contrast")
  div

    h3 Color i Contrast
    
    p.step.
      Com hem vist, tenim diverses propietats per ajustar els colors: #[i color],
      #[i background-color], #[i border-color], i alguns shorthands com #[i background]
      i #[i border].


    p.step.
      Per al valor d'aquestes propietats podem fer servir:

    div.center
      ul
        li.step.
          Codi de color RGB hexadecimal: #[code.code ##[span.red rr]#[span.green gg]#[span.blue bb]]
        li.step
          span.
            Color RGB amb la funci√≥ #[code.code rgb(#[span.red r], #[span.green g], #[span.blue b])]
          ul
            li.step.
              On #[i #[span.red r], #[span.green g] i #[span.blue b]] son nombres entre 0 i 255 indicant la proporci√≥ de
              vermell (#[span.red red]), verd (#[span.green green]) i blau
              (#[span.blue blue]), respectivament. 
        li.step.
          Color RGBA (RGB + Alpha channel -transpar√®ncia-) amb la funci√≥ #[code.code rgba(#[span.red r], #[span.green g], #[span.blue b], a)].
        li.step.
          Color HSL (Hue Saturation Lightness) amb la funci√≥ #[code.code hsl(h, s, l)].
        li.step.
          Color HSLA (HSL + Alpha channel) amb la funci√≥ #[code.code hsla(h, s, l, a)].
        li.step
          span.
            Noms de color predefinits (#[i.red red], #[i.green green], #[i.blue blue, #[i.cyan cyan]], #[i.magenta magenta],...).
          ul
            li.step.
              Podeu trobar la llista completa a les #[i refer√®ncies].


.slide(data-name="espaiat")
  div

    h3 Espaiat

    p.step.
      Tot i que ja teniu totes les eines per controlar-lo (#[i margin],
      #[i padding], etc...), no deixa de ser digne de menci√≥ a n'aquest apartat
      del curs.

    p.step.
      Posar els elements massa "apilotats" pot no nom√©s perjudicar la lectura,
      sino tamb√© perjudicar l'est√®tica.

    p.step.
      Un exc√©s d'espa√Ø tamb√© pot donar la sensaci√≥ de que no tenim continguts a
      mostrar o simplement evitar que continguts importants quedin ocults en
      carregar la p√†gina perqu√® s'ha de fer #[i scroll] per arribar a ells.

    table.step
      tr
        td.
          üìå Per altra banda, deixar espa√Ø al voltant d'un element (per exemple
          un bot√≥ o de #[Sign In], un missatge d'advert√®ncia...), pot
          contribu√Ør a captar subtilment l'atenci√≥ de l'usuari sobre aquell
          element.


.slide(data-name="hslVSrgb")
  div

    h3 HSL vs RGB

    img.step.floatRight(src="/images/figures/hsl.jpg")

    ul.bigfont
      li.step.
        La forma m√©s "tradicional" de composar els colors √©s mitjan√ßant la
        sintaxi #[code.code ##[span.red rr]#[span.green gg]#[span.blue bb]].
      li.step.
        HSL ens permet assignar un nombre a cada tonalitat de color.
      li.step.
        Aix√≠ podem ajustar independentment el contrast (saturaci√≥) i la
        lluminositat.


.slide(data-name="hsl_wheel")
  div

    h2 HSL

    img.step.medium.floatRight(src="/images/figures/hsl-color-wheel.png")

    ul.bigfont
      li.step.
        D'entrada aquest m√®tode ens pot semblar menys intuitiu.
      li.step.
        Per√≤ si fem servir una #[i roda de color] com la de la figura, resulta
        molt senzill escollor la tonalitat desitjada.

      li.step.
        Un cop hem triat un color, podem ajustar el contrast i la lluminositat
        del mateix #[b sense alterar el t√≤] (el color en si).

      li.step.
        Aix√≤ ens permet crear tantes variants com vulguem del mateix color
        nom√©s ajustant els valors de saturaci√≥ i lluminositat.
      
      li.step.
        ...O si volem un de molt semblant alterant nom√©s lleugerament el to.
        
    table.step
      tr
        td.bigfont.
          üìå D'aquesta manera podem crear paletes de colors m√©s consistents i
          amb una aparen√ßa m√©s professional.


.slide(data-name="transparency")
  div.bigfont
    h3 Transpar√®ncia
    p.step.
      Un altre efecte que ens pot ajudar molt a millorar l'aspecte del nostre
      disseny (sempre i quan no n'abusem) son les transpar√®ncies.
    p.step.
      Per crear l'efecte de transpar√®ncia podem fer servir dues t√®cniques:
    ul
      li.step.
        Fer servir colors amb #[i canal alpha], mitjan√ßant les funcions
        #[code.code rgba()] o #[code.code hsla()].
      li.step.
        Ajustar la propietat #[i opacity] (entre 0 i 1) dels elements.



.slide(data-name="background_tunning")
  div.bigfont
    h3 Fons
    p.step.
      El fons d'un element compr√®n tot l'espai que ocupa aquest (inclosos els
      paddings i les voreres), #[b per√≤ no els marges].
    p.step.
      Per emplenar el fons podem fer servir:
    div.center
      ul
        li.step.
          Un color s√≤lid.
        li.step.
          Una imatge.
        li.step.
          Un gradient de colors.
        li.step.
          Una combinaci√≥ d'un #[b o varis] de cadascun d'ells.
    table.step
      tr
        td.
          üìå En realitat els gradients els especificam tamb√© amb la propietat
          #[i background-image] perqu√®, en realitat son imatges que cream
          mitjan√ßant una funci√≥ especial.


.slide(data-name="background-color")
  div.bigfont
    h3 background-color

    p.step.
      La propietat #[i background-color] especifica un color de fons s√≤lid.
      
    p.step.
      Aquest color es mostrar√† #[b sempre per davall] de qualsevol imatge o
      gradient de fons que especifiquem addicionalment.


.slide(data-name="background-image")
  div.bigfont
    h3 background-image

    p.step.
      Especifica una imatge de fons a partir d'un fitxer (o un gradient
      generat):

    ul
      li.step
        span.
          Si √©s un fitxer, farem servir la funci√≥ #[i url()].
        ul
          li.step.
            #[b Exemple:] #[code.code url("/images/photo.jpg")].
      li.step
        span.
          Per a generar un gradient, disposam de les seg√ºents funcions:
        ul
          li.step #[i linear-gradient()]
          li.step #[i radial-gradient()]
          li.step #[i repeating-linear-gradient()]
          li.step #[i repeating-radial-gradient()]

    p.moreinfo.step https://www.w3schools.com/cssref/pr_background-image.asp


.slide(data-name="background-position")
  div.bigfont
    h3 background-position

    ul
      li.step.
        Estableix la posici√≥ inicial de la imatge (o gradient) de fons.
      li.step
        span.
          Accepta dos par√†metres: la posici√≥ horitzontal (x) i la vertical (y).  
        ul
          li.step.
            ...que podem repetir (separats per comes) per a cada imatge o
            gradient que tinguem.
      li.step.
        El seu valor per defecte (#[i initial]) √©s #[code.code 0% 0%].
      li.step.
        Si nom√©s s'especifica un valor, l'altre s'estableix autom√†ticament a
        #[code.code 50%].
      li.step.
        Podem fer servir tipus d'unitats distintes per a la coordenada
        horitzontal i la vertical.
      li.step
        span.  
          Tamb√© accepta els seg√ºents keywords:
      ul
        li.step.
          #[code.code left], #[code.code center] i #[code.code right] per a la coordenada horitzontal.
        li.step.
          #[code.code top], #[code.code center] i #[code.code bottom] per a la vertical.


.slide(data-name="background-size")
  div.bigfont
    h3 background-size

    p.step.
      Especifica el tamany de la imatge o gradient de fons.

    ul
      li.step.
        Accepta dos valors (#[i width] i #[i height]).

      li.step.
        El valor per defecte de totes dues √©s #[code.code auto] (respectar les
        dimensions originals).

      li.step.
        Si nom√©s se n'especifica una, l'altra s'ajustar√† d'acord a les
        proporcions originals de la imatge.

    table.step.medium
      tr
        td
          p.
            üìå Addicionalment, podem especificar els seg√ºents #[i keywords]
            especials:
          ul
            li.step.
              #[code.code cover]: La imatge s'escalar√†, mantenint la proporci√≥,
              al tamany m√≠nim que permeti cobrir tota l'√†rea del contenidor.
            li.step.
              #[code.code contain]: La imatge s'escalar√†, mantenint la
              proporci√≥, al tamany m√†xim possible de manera que c√†piga dins el
              contenidor.

.slide(data-name="background-repeat")
  div.bigfont
    h3 background-repeat

    p.step.
      Determina si la imatge o gradient de fons s'ha de repetir o no.  
    p.step.
      Accepta els valors:

    ul
      li.step.
        #[code.code repeat]: Es repeteix indefinidament en les dues dimensions
        (√©s el valor per defecte).
      li.step.
        #[code.code repeat-x]: Es repeteix indefinidament en la dimensi√≥
        horitzontal.
      li.step.
        #[code.code repeat-y]: Es repeteix indefinidament en la dimensi√≥
        vertical.
      li.step.
        #[code.code no-repeat]: No es repeteix.
      li.step.
        #[code.code space]: Es repeteix tantes vegades com sigui possible sense
        tallar i l'espai sobrant es reparteix equitativament entre elles.
      li.step.
        #[code.code round]: Es repeteix tantes vegades sigui possible sense
        tallar i s'escalen segons calgui per ocupar tot l'espai.


.slide(data-name="background-origin")
  div.bigfont
    h3 background-origin
    p.step.
      Determina a qu√® es relatiu el posicionament del fons.
    p.step.
      Pot agafar els seg√ºents valors:
    ul
      li.step #[code.code border-box]
      li.step #[code.code padding-box] (valor inicial)
      li.step #[code.code content-box]


.slide(data-name="background-clip")
  div.bigfont
    h3 background-clip
    p.step.
      Especifica els l√≠mits de l'√†rea de fons que s'emplena.
    p.step.
      Pot agafar els mateixos valors que #[i background-origin]:
    ul
      li.step #[code.code border-box]
      li.step #[code.code padding-box] (valor inicial)
      li.step #[code.code content-box]


.slide(data-name="background-attachment")
  div.bigfont
    h3 background-attachment
    p.step.
      Especifica si el fons ha de romandre fix o s'ha de despla√ßar junt amb el
      contingut.
    p.step.
      Pot agafar, a m√©s de #[code.code initial] i #[code.code inherit], els
      seg√ºents valors:
    ul
      li.step.
        #[code.code scroll]: (Valor per defecte) El fons es despla√ßa en relaci√≥
        al despla√ßament de la p√†gina.
      li.step.
        #[code.code fixed]: El fons queda est√†tic independentment del
        despla√ßament de la p√†gina.
      li.step.
        #[code.code local]: El fons es despla√ßa junt amb el contingut de
        l'element.


.slide(data-name="blending_modes")
  div
    header.title.step
      h1 Combinaci√≥ (Blending Modes)

    div.bigfont
      p.step.
        Com hem vist anteriorment, podem tenir m√∫ltiples imatges (o gradients) de
        fons que es van col¬∑locant un darrera de l'altre.

      p.step.
        Per defecte, les que estan davall d'una altra, nom√©s es veuran a trav√©s
        de les que les cobreixen a les zones en que aquestes presentin alg√∫n grau
        de transpar√®ncia (#[i canal alpha]).

      p.step.
        A la resta de superficie queden ocultes per la imatge que es pinta al seu
        damunt.

      p.step.
        Per√≤ aix√≤ nom√©s √©s el comportament per defecte
        (#[code.code background-blending-mode: normal])...


.slide(data-name="blending_modes_demo")
  div
    header.blend.step
      h1 Combinaci√≥ (Blending Modes)
    div
      p.step.
        La propietat #[i background-blending-mode] atorga, a aquelles imatges de
        fons per les que s'especifiqui un valor distint de #[code.code normal],
        la capacitat de #[i mesclar-se] amb les capes inferiors.
      p.step.
        La propietat #[i mix-blending-mode] ens permet fer el mateix amb el
        contingut..
      p.step.
        √âs a dir: per a cada punt de la imatge, en comptes de veure el color de
        la imatge superior, veurem el color resultant de combinar el valor
        d'aquest amb el que t√© al davall aplicant una determinada f√≥rmula
        matem√†tica.
      p.step.
        La forma en que es mesclen dep√®n del valor especificat a n'aquesta
        propietat, que pot ser qualsevol dels seg√ºents:
      table
        tr
          td.code.step normal
          td.code.step multiply
          td.code.step screen
          td.code.step overlay
          td.code.step darken
        tr
          td.code.step lighten
          td.code.step color-dodge
          td.code.step saturation
          td.code.step color
          td.code.step luminosity


.slide(data-name="blending_modes_examples")
  div
    h3 Blending Modes - Exemples

    img.step.big.floatLeft(src="/images/figures/blending_examples/blending_text_pattern.jpeg")
    img.step.big.floatLeft(src="/images/figures/blending_examples/mountains.jpeg")
    img.step.big.floatLeft(src="/images/figures/blending_examples/blendmodes-css.jpg")


.slide(data-name="shadows")
  div
    h3 Ombres
    p.step.
      Per crear efectes d'ombra disposam de dues propietats:
    ul
      li.step.
        #[i box-shadow:] Que crea una ombra al voltant del contenidor (caixa)
        de l'element.
      li.step.
        #[i text-shadow:] Crea una ombre del text contingut per l'element
        (resseguint la forma d'aquest).
    p.step.
      Ambdues propietats accepten (a soles) els keywords #[code.code none],
      #[code.code initial] i #[i inherit] que ja coneixem.
    p.step.
      Cas contrari hem de prove√Ør els seg√ºents valors:
    ul
      li.step Offset horitzontal.
      li.step Offset vertical.
    p.step.
      ...i, opcionalment tamb√©:
    ul
      li.step.
        "blur radius" o radi de borrositat.
      li.step.
        "spread radius" (nom√©s #[i box-shadow]) o radi de difussi√≥.
      li.step.
        Color (segons l'especificaci√≥ per defecte s'agafa el color del text,
        per√≤ alguns navegadors no mostren l'ombra si no s'especifica).


.slide(data-name="web_fonts")
  div.bigfont
    h3.step.title Tipografia (Web-Fonts)
    p.step.
      Un altre aspecte que pot marcar la difer√®ncia en l'aspecte de la nostra
      web √©s la tipografia.

    p.step.
      Les #[i Web-Fonts] ens ofereixen la possibilitat de que el navegador es
      pugui descarregar les fonts que nosaltres escollim dir√®ctament de la
      xarxa.

    p.step.
      Alguns dels prove√Ødors m√©s comus de #[i Web-Fonts] son:

    ul
      li.step.
        Google Fonts: #[a(href="#") https://fonts.google.com]
      li.step.
        Typekit: #[a(href="#") https://www.typekit.com]
      li.step.
        Webtype: #[a(href="#") https://www.webtype.com]

    p.step.
      Per fer-les servir nom√©s hem d'accedir als seus portals web, triar les que m√©s
      ens agradin i seguir les instruccions que s'ens donen.


.slide(data-name="transitions")
  div.bigfont
    h3.step.title Transicions

    p.step.
      Les transicions ens permeten fer que, cada cop que una propietat
      determinada canvii el canvi es faci de forma progressiva.

    p.step.
      No totes les propietats admeten transici√≥.

    ul
      li.step.
        Per exemple, la propietat #[i display] pot valer #[code.code block] o
        #[code.code none], entre d'altres, per√≤ no hi ha valors #[i intermigs]
        possibles.
      li.step.
        En canvi, la propietat #[i opacity] s√≠ que pot variar gradualment de 0
        a 1, viceversa o entre qualsevol dels seus possibles valors.

.slide(data-name="transition_properties")
  div.bigfont
    h3 Transicions - Propietats
    p.step.
      Per controlar les transaccions tenim les seg√ºents propietats:
    ul
      li.step.
        #[i transition-duration]: Especifica el nombre de milisegons que
        tardar√† la transacci√≥ en completar-se.
      li.step.
        #[i transition-property]: Especifica la propietat sobre la que volem
        aplicar la transacci√≥.
      li.step.
        #[i transition-timing-function]: Especifica a funci√≥ que defineix els
        canvis de velocitat en el temps (#[code.code linear],
        #[code.code ease-in], #[code.code ease-out], etc...).
      li.step.
        #[i transition-delay]: Especifica un temps d'espera abans d'iniciar la
        transacci√≥ (√∫til per a encadenament de m√∫ltiples transaccions).
      li.step.
        #[i transition]: Shorhand de les anteriors.

    table.step.medium
      tr
        td.
          üìå Igual com amb les propietats de les imatges de fons, les
          propietats per controlar les transaccions, permeten especificar
          m√∫ltiples transaccions.

    p.moreinfo.step https://www.w3schools.com/css/css3_transitions.asp


.slide(data-name="transformations")
  div.bigfont
    h3 Transformacions

    p.step.
      La propietat #[code.code transform], com el seu nom indica, ens permet
      definir #[i transformacions] sobre l'aspecte de l'element en que
      s'apliquen.

    p.step.
      Per fer-ho disposam d'una #[b llarga llista de funcions] que, de nou
      separades per comes, podem especificar a la propietat #[i transform].

    p.step.
      Aquestes funcions ens permeten des de moure l'element de la seva ubicaci√≥
      original fins a complexes operacions en 3D com modificar la perspectiva,
      passant per rotar-lo (en 2 i 3 dimensions), escalar-lo, etc...

    table.step
      tr
        td.
          üìå Quan aplicam qualsevol transformaci√≥ sobre un element, aquest
          conserva l'espa√Ø que tenia originalment reservat per a ell al flux
          del document. √âs a dir: no afecta sobre als altres elements.  

    p.moreinfo.step https://www.w3schools.com/cssref/css3_pr_transform.asp


.slide(data-name="transformations_transition")
  div.bigfont
    h3 Transici√≥ de Transformacions

    p.step.
      La propietat #[i transform] accepta #[i transicions].
    p.step.
      D'aquesta manera, combinant ambdues funcionalitats, podem obtenir
      vistoses transicions com les que heu estat veient a n'aquestes
      diapositives.

    table.step
      tr
        td
          p.
            üìå Tots els motors de CSS fan servir el maquinari d'acceleraci√≥
            gr√†fica per a implementar les transformacions i transicions.
          p.step.
            Per aquest motiu, no nom√©s aporten un elevat dinamisme als nostres
            dissenys sin√≥ que, a m√©s, ho fan a un cost gaireb√© imperceptible.

.slide(data-name="animations")
  div.bigfont
    h3 Animacions

    p.step.
      Ja per acabar, les animacions, de manera semblant a les transicions, ens
      permeten fer que algunes propietats (transformacions incloses) variin de
      forma progressiva.

    p.step.
      Simplement les #[i animacions] ens permeten especificar processos m√©s
      llargs, amb m√∫ltiples passos intermitjos i, opcionalment, fer que es
      repeteixin en el temps si ho desitjam.

    p.step.
      Per a m√©s informaci√≥, a les refer√®ncies teniu l'enlla√ß a la documentaci√≥
      del #[i w3Schools].

    p.moreinfo.step https://www.w3schools.com/css/css3_animations.asp




//- vim: set ft=jade:
