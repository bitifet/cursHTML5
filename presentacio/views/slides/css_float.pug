

.slide.bigfont(data-name="float")
  div

    h3.step.title La propietat "float"

    img.step.floatRight(src="/images/figures/float/float.png")

    p.step.
      La propietat #[i float], ens permet fer que un element #[i suri] dins el
      contingut que l'envolta.

    p.step.
      Pot agafar els seg√ºents valors:

    div.center
      ul
        li.step #[code.code none] (per defecte): L'element no "sura".
        li.step #[code.code left]: L'element "sura" a l'esquerra.
        li.step #[code.code right]: L'element "sura" a la dreta.

    table.step.medium
      tr
        td
          p.
            üìå Els elements de bloc, cal que tinguin la seva amplada limitada
            ja que, d'altra manera, tendeixen a ocupar tot l'ample del
            contenidor.

          p.
            El propi element flotat, en canvi, encara que sigui un element de
            bloc, tendir√† a ocupar nom√©s l'espa√Ø necessari per allotjar el seu
            contingut.


.slide.bigfont(data-name="float_behaviour")
  div

    h3 Comportament dels elements "flotats"

    img.floatRight(src="/images/figures/float/float.png")

    ul
      li.step.
        Els elements "flotats" (#[i float] ‚â† #[code.code none])
        #[b no computen a l'hora d'establir els l√≠mits del contenidor]
        en la dimensi√≥ vertical.

      li.step.
        Dit d'altra manera: Si la resta del contingut no ho evita,
        #[b poden sobresortir del seu contenidor solapant-se amb el seg√ºent]
      li.step.
        Quan aix√≤ passi, #[b exerciran el mateix efecte] despla√ßant el seu
        contingut.


.slide.bigfont(data-name="clear")
  div

    h3 La propietat "clear"

    p.step.
      La propietat #[i clear] ens permet prohibir els elements "flotats":

    div.center
      ul
        li.step A l'esquerra: #[code.code clear: left]
        li.step A la dreta: #[code.code clear: right]
        li.step Als dos costats: #[code.code clear: both]

    table.medium
      tr.step
        td
          p.
            üìå Si no volem evitar que un (o varis) objectes "flotats" penetrin
            en determinats elements posteriors, podem impedir-ho inserint un
            contenidor bu√Ød amb la declaraci√≥ #[code.code clear:both;]
          pre.frame.white.
            &lt;div style="clear: both;"&gt;&lt;/div&gt;
      tr.step
        td.
          ‚ö† Aquesta soluci√≥ implica inserir un element √∫nicament amb finalitats
          est√®tiques, el que √©s una #[b mala pr√†ctica] ja que aix√≤ √©s
          responsabilitat del full d'estil. 


.slide.bigfont(data-name="clearfix")
  div

    img.step.floatRight(src="/images/figures/float/float_clearfix.png")

    h3 El "ClearFix"


    p.step.medium.
      El #[i Clearfix] √©s un petit truc que ens permet fer aix√≤ directament des
      del full d'estil.

    pre.frame.step(style="width:60vw").
      .clearfix::after {
        display: block;
        content: " ";
        clear: both;
      }

    table.medium
      tr.step
        td
          p.
            üìå Abans de l'aparici√≥ de la propietat #[i clear] es feia servir
            #[code.code overflow:auto].
          ul
            li.step.
              El problema d'aquesta t√®cnica era que, si no control√†vem b√© els
              marges i els #[i paddings], ens podien apar√®ixer barres de
              despla√ßament.


.slide.bigfont(data-name="float_layout")
  div

    h3 Maquetaci√≥ amb "float"s

    p.step.
      El primer que hem de saber sobre la #[i maquetaci√≥ amb floats] √©s que la
      propietat #[i float] #[b no va ser pensada amb aquesta finalitat].

    table.medium
      tr
        td.step
          p.
            La t√®cnica en ess√®ncia √©s molt senzilla:
          ul
            li.step.
              #[code.code margin: 0px].
            li.step.
              #[code.code box-sizing: border-box] (o establir #[i border]s i
              #[i padding]s tamb√© a '0').
            li.step.
              I ajustar les mides amb percentatges per tal que tot quadri.

        td.step
          p.
            Per√≤ aconseguir que funcioni ja no tant...
          ul
            li.step.
              Hem de tenir en compte #[b com a m√≠nim]
              (#[code.code box-sizing: border-box;]) els marges.
            li.step
              span.
                Si fem servir mesures en "%" (elasticitat) ens poden sortir
                barres de despla√ßament que ens ho desquadrin.
              ul
                li.step.
                  #[code.code vw] ni #[code.code vh], etc√®tera... no estaran
                  suportats en cap navegador que no suporti #[i flexbox] i
                  #[i grid].


.slide.bigfont(data-name="float_layout_worth")
  div

    h3 Compensa maquetar amb "float"s?

    div.center
      img.step.big(src="/images/figures/caniuse_grid.png")


//- vim: set ft=jade:
