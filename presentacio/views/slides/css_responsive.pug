.slide(data-name="css_responsive")
  div
    h3.step.title Disseny Responsiu

    p.step.
      Entenem per "dissenys responsius" (#[i Responsive Designs]) aquells que
      d'alguna manera s'adapten a les caracter√≠stiques del dispositiu on son
      visualitzats sense perdre gens o gaireb√© gens de funcionalitat.

    p.step.
      Per a aconseguir aix√≤ podem fer servir dues estrat√®gies:

    div.center.bigfont
      ul
        li.step El #[i disseny adaptatiu].
        li.step Els #[i Media Queries].


.slide(data-name="css_adaptative")
  div.medium
    h3 Disseny Adaptatiu (elasticitat)

    ul
      li.step.
        S'adapta al tamany del #[i viewport] de forma progressiva.
      li.step.
        √âs a dir: el contingut s'escala de forma gradual (i "apropiada").
      li.step.
        Per a aconseguir-ho, fem servir unitats relatives.
      li.step
        span.
          Especialment les noves relatives a l'amplada i/o altura del #[i viewport]:
        ul
          li.step.
            #[code.code vw] i #[code.code vh]
          li.step.
            #[code.code vmin] i #[code.code vmax]


.slide(data-name="css_font_size")
  div.medium
    h3 Tamany de lletra el√†stic.

    p.step.
      Pel que fa al tamany de lletra, resulta poc pr√†ctic definir-lo en
      proporci√≥ directa al tamany del viewport.

    p.step.
      Per aix√≤ el m√©s convenient √©s establir un tamany de lletra m√≠nim amb
      unitats absolutes (px, mm, etc...)
      #[b m√©s un increment relatiu l tamany de la pantalla].

    div.center
      div
        p.step.
          #[b Exemple:]

        pre.step.code.frame.
          :root {
            font-size: 14px;
            font-size: calc(2px + 2vw);
            font-size: calc(2px + 2vmin);
          }

    table.step
      tr
        td
          p.
            üìå El fragment de CSS anterior √©s el tamany de lletra base de
            d'diapositives. Per aquest motiu l'#[i offset] √©s tan petit.
          p.
            Normalment far√≠em servir un #[i offset] major i un increment m√©s
            moderat.


.slide(data-name="css_media_queries")
  div
    h3 Media Queries

    ul.bigfont
      li.step.
        Ens permeten establir regles css espec√≠fiques per als casos en que la
        pantalla √©s molt gran o molt petita.
      li.step
        span.
          L'avantatge √©s que podem realitzar qualsevol canvi que considerem oport√∫ al CSS.
        ul
          li.step.
            Fins i tot reestructurar per complet el layout.
      li.step.
        L'inconvenient √©s que els canvis no son progressius, sin√≥ que es
        produeixen de forma abrupta.
        
    table.step.medium
      tr
        td
          p.
            üìå Un exemple t√≠pic √©s convertir una barra de navegaci√≥ lateral en
            el t√≠pic men√∫ "burguer" (‚ò∞) que habitualment veiem a les
            aplicacions m√≤bils.


.slide(data-name="css_media_query_example")
  div
    h3 Media Queries - Exemple

    pre.code.frame.step.
      @media (max-width: 600px) and (orientation: portrait) {
        .my_sidebar {
          display: none;
        }
        .contents {
          width: 100vw;
        }
      }


.slide(data-name="css_mobile_first")
  div
    h3 Mobile-First Approach

    p.step.
      Es coneix com a #[i Mobile-First Approach] a una #[b molt recomanable]
      forma d'abordar els dissenys consistents en, tal com el seu nom indica,
      dissenyar #[b primer] per al m√≤bil.

    p.step.
      La idea b√†sica √©s que si fem un disseny que funcioni b√© a un dispositiu
      m√≤bil (petit, sense ratol√≠...) ens ser√† molt m√©s senzill adaptar aquest a
      dispositius m√©s grans (les adaptacions seran normalment per a aprofitar
      millor el dispositiu: no perqu√® perqu√® res no hi funcioni), que no a
      l'inrev√©s.


//- vim: set ft=jade:
